---
export interface Props {
  mode: "dark" | "light";
  links?: Link[];
  rightLinks?: Link[];
}

interface Link {
  link: string;
  target?: string;
  name: string;
}

const { mode, links, rightLinks } = Astro.props;
---

<footer
  id="footer"
  class:list={[
    "footer z-200 flex w-[400vw] flex-col items-center justify-center pt-33 md:w-[200vw]",
    {
      "footer--fill text-white": mode === "dark",
      "text-blue": mode === "light",
    },
  ]}
>
  <div
    class:list={[
      "flex w-screen max-w-7xl flex-col items-center justify-between gap-7 px-5 pb-10 text-sm font-medium leading-none tracking-wider md:px-15 xl:flex-row",
      { "text-white": mode === "dark", "text-gray": mode === "light" },
    ]}
  >
    <span class="hidden max-w-38.25 whitespace-nowrap xl:inline"
      >© {new Date().getFullYear()} The Mee Foundation, Inc.</span
    >
    {
      links && (
        <ul class="mb-13 flex flex-col gap-7 text-center md:mb-0 md:flex-row md:gap-10">
          {links.map((link) => (
            <li>
              <a href={link.link}>{link.name}</a>
            </li>
          ))}
        </ul>
      )
    }
    <div class="flex items-center gap-8">
      {
        rightLinks?.map((link) => (
          <a href={link.link} target={link.target}>
            {link.name}
          </a>
        ))
      }
    </div>
    <span class="inline xl:hidden"
      >© {new Date().getFullYear()} The Mee Foundation, Inc.</span
    >
  </div>
</footer>

<style>
  .footer {
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;
    background-color: white;
  }
  .footer--fill {
    background: linear-gradient(218.91deg, #559faa 16.17%, #335f66 56.32%) left
      bottom no-repeat;
  }
  .link::after {
    content: "";
    mask: url("/images/arrow-right.svg") no-repeat center;
    display: block;
    width: 21px;
    height: 12px;
  }

  a:hover {
    text-decoration: underline;
  }
</style>
